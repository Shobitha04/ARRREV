public class RotateArray {
    public void rotate(int[] nums, int k) {
        int n = nums.length;
        k = k % n; // To handle cases where k is larger than the array length
        reverse(nums, 0, n - 1);
        reverse(nums, 0, k - 1);
        reverse(nums, k, n - 1);
    }

    private void reverse(int[] nums, int start, int end) {
        while (start < end) {
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start++;
            end--;
        }
    }

Step 2: Reverse the Entire Array
Reverse the array from index 0 to 6:

scss
Copy code
reverse(nums, 0, 6)

nums = [7, 6, 5, 4, 3, 2, 1]
Step 3: Reverse the First 
𝑘
k Elements
Reverse the array from index 0 to 2:

scss
Copy code
reverse(nums, 0, 2)

nums = [5, 6, 7, 4, 3, 2, 1]
Step 4: Reverse the Remaining 
𝑛
−
𝑘
n−k Elements
Reverse the array from index 3 to 6:

scss
Copy code
reverse(nums, 3, 6)

nums = [5, 6, 7, 1, 2, 3, 4]

    public static void main(String[] args) {
        RotateArray rotateArray = new RotateArray();

        int[] nums1 = {1, 2, 3, 4, 5, 6, 7};
        int k1 = 3;
        rotateArray.rotate(nums1, k1);
        for (int num : nums1) {
            System.out.print(num + " "); // Output: 5 6 7 1 2 3 4
        }
        System.out.println();

        int[] nums2 = {-1, -100, 3, 99};
        int k2 = 2;
        rotateArray.rotate(nums2, k2);
        for (int num : nums2) {
            System.out.print(num + " "); // Output: 3 99 -1 -100
        }
    }
}
