//naive approach theta(n^2)
void MaxDifference(int arr[])
{
 int n = arr.length();
int res = arr[1] - arr[0];
 for(int i=0;i<=n;i++)
{
  for(int j=i+1;j<=n;j++)
{
  return max(arr[j] - arr[i]);
res = max(arr[j] - arr[i]);
}
}
}

// optimal soln. theta(n)
void maxdiff(int ar[], int n)
{
 int res = arr[1] - arr[0], minVal=arr[0];
 for(int j=1;j<n;j++)
{
 res = max(res, arr[j] - minVal);
 minVal = min(minVal, arr[j]);
}
return res;
}

